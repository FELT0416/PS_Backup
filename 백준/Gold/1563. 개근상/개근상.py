
"""
dp
지각횟수 0~1
연속 결석횟수 0~2 기억하기



지각이 0번
결석이 연속 0번일떄
OAL 가능
결석 연속 1번일때
OAL 가능
결석 연속 2번일때
OL 가능

지각이 1번
결석이 연속 0번일떄
OA 가능
결석 연속 1번일때
OA 가능
결석 연속 2번일때
O 가능

dp 표현을
00
01
02
10
11
12
로 표현

O
A
L
"""

n = int(input())
dp=[[0,0,0],[0,0,0]]
#초기값 설정
dp[0][0]+=1 #O 의 초기값(지각0, 결석 연속 0)
dp[1][0]+=1 #L 의 초기값(지각1, 결석 연속 0)
dp[0][1]+=1 #A 의 초기값(지각0, 결석 연속 1)

for _ in range(n-1):
    temp = [[0,0,0],[0,0,0]]
    #지각이 0번
    #결석이 연속 0번일떄
    temp[0][0]+=dp[0][0]
    temp[0][1]+=dp[0][0]
    temp[1][0]+=dp[0][0]
    #결석이 연속 1번일때
    temp[0][0] += dp[0][1]
    temp[0][2] += dp[0][1]
    temp[1][0] += dp[0][1]
    #결석이 연속 2번일때
    temp[0][0] += dp[0][2]
    temp[1][0] += dp[0][2]
    #지각이 1번
    #결석이 연속 0번일때
    temp[1][0]+=dp[1][0]
    temp[1][1]+=dp[1][0]
    #결석이 연속 1번일때
    temp[1][0] += dp[1][1]
    temp[1][2] += dp[1][1]
    #결석이 연속 2번일때
    temp[1][0] += dp[1][2]

    temp[0][0]%=1000000
    temp[0][1]%=1000000
    temp[0][2]%=1000000
    temp[1][0]%=1000000
    temp[1][1]%=1000000
    temp[1][2]%=1000000
    dp = temp

ans = 0
for _ in dp:
    ans += sum(_)
print(ans%1000000)